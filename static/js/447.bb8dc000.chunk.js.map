{"version":3,"file":"static/js/447.bb8dc000.chunk.js","mappings":"qJACA,EAA0B,0BAA1B,EAAgE,4B,mBC8ChE,EA1CiB,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC9BC,EAAmCC,EAAAA,GAAAA,OAA3BC,EAA2BD,EAAAA,GAAAA,MAApBE,EAAoBF,EAAAA,GAAAA,QAAXG,EAAWH,EAAAA,GAAAA,OAE3C,OACE,gBAAKI,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,4BACE,kBAAOC,QAAQ,SAAf,SAAyBP,KACzB,kBACEQ,KAAK,OACLC,KAAK,SACLZ,MAAOA,EAAMG,OACbD,SAAUA,QAGd,4BACE,kBAAOQ,QAAQ,QAAf,SAAwBL,KACxB,kBACEM,KAAK,OACLC,KAAK,QACLZ,MAAOA,EAAMK,MACbH,SAAUA,QAGd,4BACE,kBAAOQ,QAAQ,UAAf,SAA0BJ,KAC1B,qBACEM,KAAK,UACLZ,MAAOA,EAAMM,QACbJ,SAAUA,EACVW,KAAK,IACLC,KAAK,WAGT,mBAAQC,QAASd,EAAaU,KAAK,SAAnC,SACGJ,W,+JCvCX,EAA0B,4BAA1B,EAAkE,8B,SCuElE,EA5DmB,WACjB,OAAuCS,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAA5DC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,kBACTC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEjBC,EAAAA,WAAgB,WACdF,GAASG,EAAAA,EAAAA,IAAiBP,MACzB,CAACI,EAAUJ,IAEd,MAAoCM,EAAAA,SAAe,CACjDN,OAAQD,EAAkBS,GAAKT,EAAkBS,GAAKR,EACtDlB,OAAQiB,EAAkBjB,OAASiB,EAAkBjB,OAAS,GAC9DE,MAAOe,EAAkBf,MAAQe,EAAkBf,MAAQ,GAC3DC,QAASc,EAAkBU,KAAOV,EAAkBU,KAAO,KAJ7D,eAAOC,EAAP,KAAmBC,EAAnB,KAOAL,EAAAA,WAAgB,WACdK,EAAc,CACZX,OAAQD,EAAkBS,GAAKT,EAAkBS,GAAKR,EACtDlB,OAAQiB,EAAkBjB,OAASiB,EAAkBjB,OAAS,GAC9DE,MAAOe,EAAkBf,MAAQe,EAAkBf,MAAQ,GAC3DC,QAASc,EAAkBU,KAAOV,EAAkBU,KAAO,OAE5D,CAACV,IAgBJ,OACE,4BACID,IAAW,SAACc,EAAA,EAAD,CAAQC,OAAQ,OAAQC,MAAO,OAAQC,MAAO,SAC1DjB,IACC,gBAAKX,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,2CACA,SAAC4B,EAAA,EAAD,CACErC,MAAO+B,EACP7B,SAvBS,SAACoC,GACpBN,GAAc,SAACO,GAAD,eAAC,UACVA,GADS,cAEXD,EAAME,OAAO5B,KAAO0B,EAAME,OAAOxC,YAqB1BC,YAjBQ,SAACqC,GACnBA,EAAMG,iBAENhB,GAASiB,EAAAA,EAAAA,IAAeX,IACxBR,EAAS,IAAK,CAAEoB,SAAS","sources":["webpack://dowjones/./src/views/components/PostForm/index.module.css?14d2","views/components/PostForm/index.js","webpack://dowjones/./src/views/pages/UpdatePost/index.module.css?62eb","views/pages/UpdatePost/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"PostForm_section__qHQkE\",\"container\":\"PostForm_container__EP-ld\"};","import React from 'react';\nimport styles from './index.module.css';\n\nimport { formUtils } from 'views/utils/constants';\n\nconst PostForm = ({ value, handleClick, onChange }) => {\n  const { userId, title, article, submit } = formUtils;\n\n  return (\n    <div className={styles.section}>\n      <div className={styles.container}>\n        <div>\n          <label htmlFor=\"userId\">{userId}</label>\n          <input\n            type=\"text\"\n            name=\"userId\"\n            value={value.userId}\n            onChange={onChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"title\">{title}</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={value.title}\n            onChange={onChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"article\">{article}</label>\n          <textarea\n            name=\"article\"\n            value={value.article}\n            onChange={onChange}\n            rows=\"4\"\n            cols=\"50\"\n          />\n        </div>\n        <button onClick={handleClick} type=\"submit\">\n          {submit}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PostForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"UpdatePost_section__5ZyWf\",\"container\":\"UpdatePost_container__QoEyg\"};","import React from 'react';\nimport Loader from '../../components/Loader/index';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {\n  retrievePostById,\n  updatePostById,\n} from 'services/features/posts/actions';\nimport PostForm from 'views/components/PostForm';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styles from './index.module.css';\n\nconst UpdatePost = () => {\n  const { loading, retrievedPostById } = useSelector((state) => state.posts);\n  const { postId } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(retrievePostById(postId));\n  }, [dispatch, postId]);\n\n  const [postValues, setPostValues] = React.useState({\n    postId: retrievedPostById.id ? retrievedPostById.id : postId,\n    userId: retrievedPostById.userId ? retrievedPostById.userId : '',\n    title: retrievedPostById.title ? retrievedPostById.title : '',\n    article: retrievedPostById.body ? retrievedPostById.body : '',\n  });\n\n  React.useEffect(() => {\n    setPostValues({\n      postId: retrievedPostById.id ? retrievedPostById.id : postId,\n      userId: retrievedPostById.userId ? retrievedPostById.userId : '',\n      title: retrievedPostById.title ? retrievedPostById.title : '',\n      article: retrievedPostById.body ? retrievedPostById.body : '',\n    });\n  }, [retrievedPostById]);\n\n  const handleChange = (event) => {\n    setPostValues((prevValues) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleClick = (event) => {\n    event.preventDefault();\n\n    dispatch(updatePostById(postValues));\n    navigate('/', { replace: true });\n  };\n\n  return (\n    <div>\n      {!loading && <Loader height={'2rem'} width={'2rem'} color={'pink'} />}\n      {loading && (\n        <div className={styles.section}>\n          <div className={styles.container}>\n            <h3>Update A Post</h3>\n            <PostForm\n              value={postValues}\n              onChange={handleChange}\n              handleClick={handleClick}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UpdatePost;\n"],"names":["value","handleClick","onChange","userId","formUtils","title","article","submit","className","styles","htmlFor","type","name","rows","cols","onClick","useSelector","state","posts","loading","retrievedPostById","postId","useParams","navigate","useNavigate","dispatch","useDispatch","React","retrievePostById","id","body","postValues","setPostValues","Loader","height","width","color","PostForm","event","prevValues","target","preventDefault","updatePostById","replace"],"sourceRoot":""}