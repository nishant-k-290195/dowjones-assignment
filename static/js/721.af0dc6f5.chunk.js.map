{"version":3,"file":"static/js/721.af0dc6f5.chunk.js","mappings":"wIAiCA,IA7BiB,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC9BC,EAAmCC,EAAAA,GAAAA,OAA3BC,EAA2BD,EAAAA,GAAAA,MAApBE,EAAoBF,EAAAA,GAAAA,QAAXG,EAAWH,EAAAA,GAAAA,OAE3C,OACE,4BACE,kBAAOI,QAAQ,SAAf,SAAyBL,KACzB,kBACEM,KAAK,OACLC,KAAK,SACLV,MAAOA,EAAMG,OACbD,SAAUA,KAEZ,kBAAOM,QAAQ,QAAf,SAAwBH,KACxB,kBAAOI,KAAK,OAAOC,KAAK,QAAQV,MAAOA,EAAMK,MAAOH,SAAUA,KAC9D,kBAAOM,QAAQ,UAAf,SAA0BF,KAC1B,qBACEI,KAAK,UACLV,MAAOA,EAAMM,QACbJ,SAAUA,EACVS,KAAK,IACLC,KAAK,QAEP,mBAAQC,QAASZ,EAAaQ,KAAK,SAAnC,SACGF,S,kIC8BT,UA9CmB,WACjB,OAAuCO,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAA5DC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,kBACTC,GAAWC,EAAAA,EAAAA,MAAXD,OAGFE,IAFWC,EAAAA,EAAAA,OAEAC,EAAAA,EAAAA,OAEjBC,EAAAA,WAAgB,WACdH,GAASI,EAAAA,EAAAA,IAAiBN,MACzB,CAACE,EAAUF,IAEd,MAAoCK,EAAAA,SAAe,CACjDL,OAAQD,EAAkBQ,GAAKR,EAAkBQ,GAAKP,EACtDhB,OAAQe,EAAkBf,OAASe,EAAkBf,OAAS,GAC9DE,MAAOa,EAAkBb,MAAQa,EAAkBb,MAAQ,GAC3DC,QAASY,EAAkBS,KAAOT,EAAkBS,KAAO,KAJ7D,eAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,4BACIZ,IAAW,SAAC,IAAD,CAAQa,OAAQ,OAAQC,MAAO,OAAQC,MAAO,SAC1Df,IACC,SAAC,IAAD,CACEjB,MAAO4B,EACP1B,SApBa,SAAC+B,GACpBJ,GAAc,SAACK,GAAD,eAAC,UACVA,GADS,cAEXD,EAAME,OAAOzB,KAAOuB,EAAME,OAAOnC,YAkB9BC,YAdY,SAACgC,GACnBA,EAAMG,iBAENf,GAASgB,EAAAA,EAAAA,IAAeT","sources":["views/components/PostForm/index.js","views/pages/UpdatePost/index.js"],"sourcesContent":["import React from 'react';\n\nimport { formUtils } from 'views/utils/constants';\n\nconst PostForm = ({ value, handleClick, onChange }) => {\n  const { userId, title, article, submit } = formUtils;\n\n  return (\n    <div>\n      <label htmlFor=\"userId\">{userId}</label>\n      <input\n        type=\"text\"\n        name=\"userId\"\n        value={value.userId}\n        onChange={onChange}\n      />\n      <label htmlFor=\"title\">{title}</label>\n      <input type=\"text\" name=\"title\" value={value.title} onChange={onChange} />\n      <label htmlFor=\"article\">{article}</label>\n      <textarea\n        name=\"article\"\n        value={value.article}\n        onChange={onChange}\n        rows=\"4\"\n        cols=\"50\"\n      />\n      <button onClick={handleClick} type=\"submit\">\n        {submit}\n      </button>\n    </div>\n  );\n};\n\nexport default PostForm;\n","import React from 'react';\nimport Loader from '../../components/Loader/index';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {\n  retrievePostById,\n  updatePostById,\n} from 'services/features/posts/actions';\nimport PostForm from 'views/components/PostForm';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst UpdatePost = () => {\n  const { loading, retrievedPostById } = useSelector((state) => state.posts);\n  const { postId } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(retrievePostById(postId));\n  }, [dispatch, postId]);\n\n  const [postValues, setPostValues] = React.useState({\n    postId: retrievedPostById.id ? retrievedPostById.id : postId,\n    userId: retrievedPostById.userId ? retrievedPostById.userId : '',\n    title: retrievedPostById.title ? retrievedPostById.title : '',\n    article: retrievedPostById.body ? retrievedPostById.body : '',\n  });\n\n  const handleChange = (event) => {\n    setPostValues((prevValues) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleClick = (event) => {\n    event.preventDefault();\n\n    dispatch(updatePostById(postValues));\n    // navigate('/', { replace: true });\n  };\n\n  return (\n    <div>\n      {!loading && <Loader height={'2rem'} width={'2rem'} color={'pink'} />}\n      {loading && (\n        <PostForm\n          value={postValues}\n          onChange={handleChange}\n          handleClick={handleClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UpdatePost;\n"],"names":["value","handleClick","onChange","userId","formUtils","title","article","submit","htmlFor","type","name","rows","cols","onClick","useSelector","state","posts","loading","retrievedPostById","postId","useParams","dispatch","useNavigate","useDispatch","React","retrievePostById","id","body","postValues","setPostValues","height","width","color","event","prevValues","target","preventDefault","updatePostById"],"sourceRoot":""}